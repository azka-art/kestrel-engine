{"uuid":"2e2d7b91-fa3f-4f18-8b47-fb0474d6cd04","historyId":"11a552926c0546a315d85bb740c50a0","fullName":"features/api/TagHunting.feature:83","labels":[{"name":"tag","value":"api"},{"name":"tag","value":"positive"},{"name":"tag","value":"validation"},{"name":"tag","value":"structure"},{"name":"host","value":"M-dz"},{"name":"thread","value":"33896@M-dz.Test worker(1)"},{"name":"feature","value":"JSONPlaceholder Posts Hunt - Tag-like Management"},{"name":"story","value":"Posts data structure validation"},{"name":"suite","value":"JSONPlaceholder Posts Hunt - Tag-like Management"},{"name":"testClass","value":"Posts data structure validation"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/api/TagHunting.feature"},{"name":"package","value":"features.api.TagHunting_feature.JSONPlaceholder Posts Hunt - Tag-like Management"}],"links":[],"name":"Posts data structure validation","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"User should have name\r\nExpected: is not null\r\n     but: was null","trace":"java.lang.AssertionError: User should have name\r\nExpected: is not null\r\n     but: was null\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat com.kestrel.api.stepdefs.ApiStepDefinitions.eachUserProfileShouldHaveRequiredFields(ApiStepDefinitions.java:399)\r\n\tat ✽.each user profile should have required fields(classpath:features/api/TagHunting.feature:88)\r\n"},"stage":"finished","description":"  As a Kestrel Engine\n  I want to hunt for posts and content management functionality bugs\n  So I can ensure proper content categorization and retrieval","steps":[{"name":"Given  Kestrel API client is armed with credentials","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1749294559202,"stop":1749294559207},{"name":"When  I hunt for all available tags via GET /tag","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1749294559207,"stop":1749294559846},{"name":"Then  the hunt should return status 200","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1749294559846,"stop":1749294559846},{"name":"And  response should contain user data array","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1749294559846,"stop":1749294559875},{"name":"And  user data structure should be consistent","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1749294559875,"stop":1749294559878},{"name":"And  each user profile should have required fields","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"User should have name\r\nExpected: is not null\r\n     but: was null","trace":"java.lang.AssertionError: User should have name\r\nExpected: is not null\r\n     but: was null\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat com.kestrel.api.stepdefs.ApiStepDefinitions.eachUserProfileShouldHaveRequiredFields(ApiStepDefinitions.java:399)\r\n\tat ✽.each user profile should have required fields(classpath:features/api/TagHunting.feature:88)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1749294559891,"stop":1749294559914}],"attachments":[],"parameters":[],"start":1749294559197,"stop":1749294559916}